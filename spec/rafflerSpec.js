// Generated by CoffeeScript 1.6.3
describe("Raffler Class", function() {
  it("should define an application object", function() {
    return expect(Raffler).toBeDefined();
  });
  describe("Raffler Model", function() {
    var entry;
    entry = new Raffler.Models.Entry;
    it("should define a basic model", function() {
      return expect(Raffler.Models).toBeDefined();
    });
    it("should create an Entry model", function() {
      return expect(entry).toBeDefined();
    });
    it("should provide the correct defaults for the attributes on the entry model", function() {
      expect(entry.attributes.name).toBeDefined();
      return expect(entry.attributes.winner).toBeDefined();
    });
    return it("should provide appropriate default values to default attributes", function() {
      expect(entry.get('name')).toBe('');
      return expect(entry.get('winner')).toBeFalsy();
    });
  });
  describe("Raffler Collection", function() {
    var Entries;
    Entries = new Raffler.Collections.Entries;
    it("should be defined", function() {
      return expect(Raffler.Collections.Entries).toBeDefined();
    });
    it("should use the Entry model", function() {
      return expect(Entries.model).toEqual(Raffler.Models.Entry);
    });
    return it("should use LocalStorage", function() {
      return expect(Entries.localStorage).toBeDefined();
    });
  });
  return describe("Raffler Router", function() {
    var Router;
    Router = new Raffler.Routers.Entries;
    it("should define a default route as index", function() {
      return expect(Router.routes['']).toBe('index');
    });
    return it("should initialize an internal collection", function() {
      return expect(Router.collection).toBeDefined();
    });
  });
});
